// Заголовки, общие БЄМ блоки и прочее...
h,
.title-h {
  &1 {
    font-weight: 700;

    @media (min-width: $tablet) {
      line-height: math.div(50, 42);
      @include adaptiveValue("font-size", 42, 36, 0, 1924, 1024);
    }
    @media (max-width: $tablet) {
      @include adaptiveValue("font-size", 36, 20, 0, 1024, 375);
    }
  }
  &2 {
    font-weight: 700;
    font-size: toRem(32);
    line-height: math.div(42, 32);
  }
  &3 {
    font-weight: 700;
    font-size: toRem(24);
    line-height: math.div(32, 24);
  }
  &4 {
    font-weight: 700;
    line-height: math.div(26, 20);
    @include adaptiveValue("font-size", 20, 18);
  }
  &5 {
    font-weight: 700;
    line-height: math.div(26, 20);
    @include adaptiveValue("font-size", 18, 16, 0, 1024, 375);
  }
}

img,
video {
  display: block;
  max-width: 100%;
  height: auto;
}

section,
.section {
  @media (min-width: $tablet) {
    @include adaptiveValue("margin-top", 80, 60, 0, 1920, 1024);
    @include adaptiveValue("margin-bottom", 80, 60, 0, 1920, 1024);
  }
  @media (max-width: $tablet) {
    @include adaptiveValue("margin-top", 60, 50, 0, 1024, 375);
    @include adaptiveValue("margin-bottom", 60, 50, 0, 1024, 375);
  }

  &.section-bg {
    @media (min-width: $tablet) {
      @include adaptiveValue("padding-top", 80, 60, 0, 1920, 1024);
      @include adaptiveValue("padding-bottom", 80, 60, 0, 1920, 1024);
    }
    @media (max-width: $tablet) {
      @include adaptiveValue("padding-top", 60, 50, 0, 1024, 375);
      @include adaptiveValue("padding-bottom", 60, 50, 0, 1024, 375);
    }
  }

  &:first-child {
    @include adaptiveValue("margin-top", 30, 20, 0, 1920, 1024);
  }
}

.icon {
  display: block;
  width: toRem(24);
  height: toRem(24);
  flex: 0 0 toRem(24);
}

._content {
  & > * {
    margin-top: toRem(16);
    margin-bottom: toRem(16);
  }

  a {
    color: $Primary2;
    text-decoration: underline from-font;
    text-underline-offset: 3px;
    transition: $transition ease text-decoration 0s;

    @media (any-hover: hover) {
      &:hover {
        text-decoration: underline transparent from-font;
      }
    }
  }

  p {
    min-height: toRem(1);
  }

  ol {
    counter-reset: item;

    li {
      position: relative;
      list-style-type: none;
      @include adaptiveValue("padding-left", 40, 24);

      &::before {
        content: counter(item) ".";
        counter-increment: item;
        position: absolute;
        left: 0;
      }

      & > ol {
        counter-reset: subitem;

        li {
          &::before {
            content: counter(item) "." counters(subitem, ".") " ";
            counter-increment: subitem;
          }
        }
      }
    }
  }

  ul {
    padding-left: toRem(20);
    display: grid;
    align-content: flex-start;
    row-gap: toRem(8);
    margin: toRem(16) 0;

    li {
      list-style-type: disc;
    }
  }

  .table {
    width: 100%;
    overflow-x: auto;
    scrollbar-width: thin;

    table {
      width: 100%;
      border-collapse: collapse;
    }
  }

  .wp-block-quote {
    cite {
      opacity: 0.6;
    }
  }

  figure {
    img {
    }

    figcaption {
      line-height: math.div(24, 16);
      @include adaptiveValue("font-size", 16, 12);
      @include adaptiveValue("margin-top", 20, 12);
    }
  }

  @for $i from 1 through 4 {
    .columns-#{$i} {
      display: grid;
      @include adaptiveValue("gap", 35, 10);
    }
  }
  .columns-4 {
    @media (min-width: $mobileSmall) {
      grid-template-columns: repeat(4, 1fr);
    }
    @media (min-width: $mobile) {
      grid-template-columns: repeat(4, 1fr);
    }
  }
  .columns-3 {
    @media (min-width: $mobileSmall) {
      grid-template-columns: repeat(3, 1fr);
    }
  }
  .columns-2 {
    @media (min-width: $mobileSmall) {
      grid-template-columns: repeat(2, 1fr);
    }
  }

  .wp-block-gallery {
    figure {
      margin: 0;

      @media (min-width: $mobileSmall) {
        position: relative;
        padding-bottom: 100%;

        img {
          position: absolute;
          top: 0;
          left: 0;
          width: 100%;
          height: 100%;
          object-fit: cover;
        }
      }
    }
  }

  :first-child {
    margin-top: 0;
  }
  :last-child {
    margin-bottom: 0;
  }
}

._heading {
  &:not(:last-child) {
    margin-bottom: toRem(30);
  }
}

.label {
  display: inline-flex;
  align-items: center;
  font-weight: 500;
  font-size: toRem(14);
  line-height: math.div(20, 14);
  min-height: toRem(28);
  padding: toRem(4) toRem(10);

  // .label_primary1
  &_primary1 {
    display: inline-flex;
    color: $White;
    background-color: $Primary1;
  }

  // .label_green
  &_green {
    background-color: $Green;
    color: $White;
  }

  // .label_yellow
  &_yellow {
    background-color: $Yellow;
  }
}

._color-primary1 {
  color: $Primary1 !important;

  svg {
    fill: $Primary1 !important;
  }
}

._color-orange {
  color: $Orange;

  svg {
    fill: $Orange;
  }
}

._color-green {
  color: $Green;

  svg {
    fill: $Green;
  }
}

.breadcrumbs {
  padding-top: toRem(20);
  padding-bottom: toRem(20);

  & + section {
    margin-top: 0;
    padding-top: 0 !important;
  }

  // .breadcrumbs__title
  &__title {
    line-height: math.div(46, 36);
    
    @media (min-width: $tablet) {
      @include adaptiveValue("font-size", 36, 32, 0, 1920, 1024);
    }
    @media (max-width: $tablet) {
      @include adaptiveValue("font-size", 32, 24, 0, 1024, 375);
    }
  }
}

.site-breadcrumbs {
  color: $Grey3;
  font-size: toRem(14);
  line-height: math.div(20, 14);
  display: flex;
  align-items: center;
  gap: toRem(5);

  &:not(:last-child) {
    margin-bottom: toRem(20);
  }

  // .site-breadcrumbs__link
  &__link {
  }

  // .site-breadcrumbs__separator
  &__separator {
    svg {
      flex: 0 0 toRem(16);
      width: toRem(16);
      height: toRem(16);
      fill: $Grey3;
      transform: rotate(-90deg);
    }
  }

  // .site-breadcrumbs__title
  &__title {
  }
}

.m {
  &t {
    &-0 {
      margin-top: 0 !important;
    }
    &-1 {
      margin-top: toRem(10) !important;
    }
  }
  &b {
    &-0 {
      margin-bottom: 0 !important;
    }
    &-1 {
      margin-bottom: toRem(10) !important;
    }
  }
}

[data-src] {
  cursor: pointer;
}

// Анимации при наведении
[class*="link-"] {
  position: relative;
  white-space: nowrap;

  &::before {
    content: "";
    display: block;
    width: 0;
    border-bottom: toRem(1) solid;
    position: absolute;
    left: 0;
    bottom: 0;
    opacity: 0;
    transition: $transition ease all 0s;
  }
}

.link-hover {
  @media (any-hover: hover) {
    &:hover {
      &::before {
        opacity: 1;
        width: 100%;
      }
    }
  }
}

.link-underline {
  &::before {
    width: 100%;
    opacity: 1;
  }

  @media (any-hover: hover) {
    &:hover {
      &::before {
        opacity: 0;
        width: 0%;
      }
    }
  }
}

.shake-animation {
  display: inline-block;

  @media (any-hover: hover) {
    &:hover {
      animation: shake-horizontal 0.8s cubic-bezier(0.455, 0.03, 0.515, 0.955) both;
    }
  }
}

@keyframes shake-horizontal {
  0%,
  100% {
    transform: translateX(0);
  }
  10%,
  30%,
  50% {
    transform: translateX(-2px);
  }
  20%,
  40%,
  60% {
    transform: translateX(2px);
  }
  95% {
    transform: translateX(1px);
  }
}

// .swiper
.swiper {
  // .swiper-pagination
  &-pagination {
    &:not(:first-child) {
      padding-top: toRem(25);
    }
  }

  // .swiper-pagination-bullet
  &-pagination-bullet {
    flex: 0 0 toRem(60);
    width: toRem(60);
    height: toRem(3);
    background-color: $Grey5;
    border-radius: 0 !important;
    transition: $transition ease background-color 0s;
  }

  // .swiper-pagination-bullet-active
  &-pagination-bullet-active {
    background-color: $Primary2;
  }

  // .swiper-arrow
  &-arrow {
    flex: 0 0 toRem(50);
    width: toRem(50);
    height: toRem(50);
    background-color: $White;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    z-index: 1;

    &:not(.swiper-button-disabled) {
      cursor: pointer;
    }

    svg {
      flex: 0 0 toRem(24);
      height: toRem(24);
      width: toRem(24);
      fill: $Grey4;
    }
  }
}

// .gallery
.lg-backdrop {
  background-color: rgba($color: $mainColor, $alpha: 0.4) !important;
}

.lg-toolbar .lg-icon {
  color: $White !important;
}
